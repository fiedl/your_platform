- user ||= @user
- if can? :change_status, user
  - workflows_by_corporation = executable_workflows_by_corporation(user)
  - if workflows_by_corporation.any? || user.markable_as_deceased?
    .dropdown.workflow_triggers{class: "workflow-triggers-for-user-#{user.id}"}
      %a.btn.btn-outline-secondary.dropdown-toggle(data-toggle="dropdown" href="#")
        = icon 'chevron-up'
        = t :change_status
      .dropdown-menu.dropdown-menu-right
        - workflows_by_corporation.each do |corporation_title, workflows|
          - if workflows.count > 0
            .nav-header= corporation_title
            - for workflow in workflows
              = link_to_workflow workflow, user: user, class: "dropdown-item"
        - if can? :execute, Workflow.find_mark_as_deceased_workflow
          -# TODO: Replace this hard-coded stuff by a workflow with parameter modal:
          .nav-header= I18n.t(:event_of_death)
          %a.dropdown-item.deceased_trigger{href: '#', data: {modal_body: render(partial: 'users/deceased_modal', locals: {user: user})}}
            = "âœŸ #{I18n.t(:deceased)}"
