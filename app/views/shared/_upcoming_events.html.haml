- # locals:
- events ||= []
- force_show ||= false
- group ||= group
- #
- # helper methods:
- # EventsHelper#group_to_create_the_event_in

- if events.count > 0 || force_show
  %h1.upcoming_events
    =t :events
    .ics_abo_buttons.tool
      - if group
        %a#ics_abo{href: group_events_url(group_id: group.id, format: 'ics', protocol: 'webcal', token: current_user.account.auth_token), title: "Kalender-Abo (ICS, iCal): Veranstaltungen von '#{group.name}' im Kalender auf dem eigenen Rechner abonnieren.", data: {placement: 'top'}}
          = icon :calendar
      - elsif current_user
        %a.btn.btn-default#ics_abo{href: events_url(format: 'ics', protocol: 'webcal', token: current_user.account.auth_token), title: "Veranstaltungen, die mich betreffen, im Kalender auf dem eigenen Rechner abonnieren. Der Kalender wird dann automatisch auf dem Laufenden gehalten. (Empfohlen.)", data: {placement: 'top'}}
          = icon :calendar
          = "#{t(:calendar_abo)}!"
  %div
    %ul.upcoming_events
      = render partial: 'events/events_lis', locals: {events: events}
    .events_footer
      .create_event
        - if current_user && group_to_create_the_event_for && can?(:create_event, group_to_create_the_event_for)
          %a.btn.btn-default.btn-small#create_event{href: events_path(group_id: group_to_create_the_event_for.id, format: 'json')}
            = icon :plus
            =t :add_event_for
            = surround "'", "'" do
              = group_to_create_the_event_for.name
      .show_all
        - if group
          = link_to t(:show_all_events), group_events_path(group_id: group.id, all: true)
        - else
          = link_to t(:show_all_events), events_path
      - if can?(:use, :semester_calendars) && can?(:index, SemesterCalendar) and not group
        .show_semester_calendars
          = link_to t(:show_semester_calendars), semester_calendars_path
          - if current_user.primarily_administrated_corporation && can?(:create, SemesterCalendar)
            |
            = link_to t(:edit_semester_calendar), group_current_semester_calendar_path(current_user.primarily_administrated_corporation)
